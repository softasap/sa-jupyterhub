---

  - name: JupyterHub | npm configurable-http-proxy
    npm: name=configurable-http-proxy global=yes state=present
    ignore_errors: true
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | create jupyter group
    group: name=jupyter state=present
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | create jupyter user
    user: name=jupyter state=present groups=jupyter,shadow
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | create jupyter config folder
    file: path=/etc/jupyterhub state=directory mode=0755 owner=jupyter group=jupyter
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | create jupyter sqllitedb folder
    file: path=/etc/jupyterhub/db state=directory owner=jupyter group=jupyter mode="u=rwx,g=rwx,o="
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | allow sudoer for jupyter command
    template: src="{{ role_dir }}/templates/jupyter_sudoers_d.j2" dest=/etc/sudoers.d/jupyter mode=0440 owner=root group=root
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | install components
    pip: executable="{{ jupyterhub_pip | default('/usr/local/bin/pip3') }}" name="{{ item }}" extra_args='--upgrade'
    with_items:
      - "jupyter"
      - "jupyterhub"
      - "sudospawner"
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | Check initialized
    shell: test -e  /etc/jupyterhub/jupyterhub_config.py
    become: yes
    changed_when: False
    ignore_errors: true
    register: config_present
    tags:
      - jupyterhub
      - skip_ansible_lint

  - name: JupyterHub | Configure
    shell: "{{ jupyterhub_python_base_dir }}/bin/jupyterhub --generate-config"
    args:
       chdir: /etc/jupyterhub/
       creates: /etc/jupyterhub/jupyterhub_config.py
    when: config_present is failed
    become: yes
    tags:
      - jupyterhub
      - skip_ansible_lint

  - name: JupyterHub | Patch basic settings /etc/jupyterhub/jupyterhub_config.py
    lineinfile:
      dest: /etc/jupyterhub/jupyterhub_config.py
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter | default('EOF') }}"
    with_items: "{{ jupyterhub_properties | default([]) }}"
    when: docker_test is not defined
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | Template startup (init, template)
    template: src="{{ role_dir }}/templates/jupyterhub_init.j2"  dest="/etc/init.d/jupyterhub" mode="u=rwx,g=rx,o=rx"
    when: ansible_service_mgr == "init"
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | Template startup (init, startup)
    shell:  update-rc.d jupyterhub defaults
    when: ansible_service_mgr == "init"
    become: yes
    tags:
      - jupyterhub
      - skip_ansible_lint

  - name: JupyterHub | Template startup (systemd)
    template: src="{{ role_dir }}/templates/jupyterhub.systemd.j2" dest="/etc/systemd/system/jupyterhub.service"
    when: ansible_service_mgr == "systemd"
    become: yes
    tags:
      - jupyterhub

  - name: JupyterHub | reload systemd
    command: systemctl daemon-reload
    when: ansible_service_mgr == "systemd"
    become: yes
    tags:
      - jupyterhub
      - skip_ansible_lint

  - name: JupyterHub | Start and Enable Service
    service: name="jupyterhub" enabled="yes" state="started"
    when: ansible_service_mgr == "systemd"
    become: yes
    tags:
      - jupyterhub
